from typing import List

class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid or not grid[0]:
            return 0
            
        rows, cols = len(grid), len(grid[0])
        islands = 0
        
        def dfs(r: int, c: int) -> None:
            # Base cases: out of bounds or water
            if (r < 0 or r >= rows or 
                c < 0 or c >= cols or 
                grid[r][c] == '0'):
                return
                
            # Mark current cell as visited by changing it to '0'
            grid[r][c] = '0'
            
            # Explore all four directions
            dfs(r + 1, c)  # down
            dfs(r - 1, c)  # up
            dfs(r, c + 1)  # right
            dfs(r, c - 1)  # left
        
        # Iterate through each cell in the grid
        for r in range(rows):
            for c in range(cols):
                if grid[r][c] == '1':
                    islands += 1
                    dfs(r, c)
                    
        return islands
